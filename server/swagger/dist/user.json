{
  "openapi": "3.0.0",
  "info": {
    "title": "API Documentation",
    "description": "Documentation for the API endpoints",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "paths": {
    "/signup": {
      "post": {
        "tags": ["User"],
        "summary": "User signup",
        "description": "Create a new user account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSignupInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User signup successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["User"],
        "summary": "User login",
        "description": "Authenticate and log in a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/enrollments/status": {
      "get": {
        "tags": ["User"],
        "summary": "Get enrollment status",
        "description": "Get the enrollment status for the authenticated user",
        "responses": {
          "200": {
            "description": "Enrollment status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnrollmentStatus"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/enrollments": {
      "post": {
        "tags": ["User"],
        "summary": "Add enrollment",
        "description": "Add a new enrollment for the authenticated user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnrollmentInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Enrollment added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Enrollment"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/{userId}": {
      "put": {
        "tags": ["User"],
        "summary": "Update user",
        "description": "Update the profile of a user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserSignupInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["name", "email", "password"]
      },
      "UserLoginInput": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["email", "password"]
      },
      "EnrollmentInput": {
        "type": "object",
        "properties": {
          "classId": {
            "type": "string"
          },
          "paymentIntentId": {
            "type": "string"
          }
        },
        "required": ["classId", "paymentIntentId"]
      },
      "UserUpdateInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EnrollmentStatus": {
        "type": "object",
        "properties": {
          "enrollmentCount": {
            "type": "integer"
          },
          "enrollments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "class": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "instructor": {
                      "type": "string"
                    },
                    "seats": {
                      "type": "integer"
                    },
                    "price": {
                      "type": "number"
                    },
                    "status": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "paymentIntentId": {
                  "type": "string"
                },
                "paymentStatus": {
                  "type": "string",
                  "enum": ["paid", "pending"]
                },
                "enrollmentDate": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      },
      "Enrollment": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "class": {
            "type": "string"
          },
          "paymentIntentId": {
            "type": "string"
          },
          "paymentStatus": {
            "type": "string",
            "enum": ["paid", "pending"]
          },
          "enrollmentDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}
